// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Persistence.Shared;
namespace Persistence.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(DatabaseContext))]
    // ReSharper disable once UnusedType.Global
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 871, DateTimeKind.Utc).AddTicks(6791));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 880, DateTimeKind.Utc).AddTicks(2123));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fancy items for men",
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fancy items for Women",
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Fancy items for kids",
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("Domain.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 880, DateTimeKind.Utc).AddTicks(4146));

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 880, DateTimeKind.Utc).AddTicks(5385));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Domain.OrderDetails.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 880, DateTimeKind.Utc).AddTicks(6908));

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 880, DateTimeKind.Utc).AddTicks(8330));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Domain.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 880, DateTimeKind.Utc).AddTicks(9745));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 881, DateTimeKind.Utc).AddTicks(1589));

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Domain.ShopItems.ShopItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 881, DateTimeKind.Utc).AddTicks(3442));

                    b.Property<string>("ImageThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 881, DateTimeKind.Utc).AddTicks(5169));

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ShopItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/H662e9d9e19444568b60240728509da48Z/2020-New-Arrival-Dress-Vests-For-Men-Slim-Fit-Mens-Suit-Vest-Male-Waistcoat-Gilet-Homme.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/HTB1xsf6b8RRMKJjSZPhq6AZoVXae/2020-New-Arrival-Dress-Vests-For-Men-Slim-Fit-Mens-Suit-Vest-Male-Waistcoat-Gilet-Homme.jpg_640x640.jpg",
                            InStock = true,
                            LongDescription = "2020 New Arrival Vests For Men Slim Fit Men Suit Vest Male Waistcoat Casual Sleeveless Formal Business Jacket",
                            Name = "Slim Fit Vest",
                            Notes = "It is a fine item to have!",
                            Price = 5.99m,
                            ShortDescription = "2020 New Arrival Vests For Men Slim Fit"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/Hce2dbb8cb8ea4cfd8aa1a9acd155e277z/Men-s-3-Pieces-Black-Elegant-Suits-With-Pants-Vest-Jacket-Slim-Fit-Single-Button-Party.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/H7591aeca8efd457dbdadbf5097fe8e6aE/DIHOPE-2020-Business-Blazer-Vest-Pants-Suit-Sets-Men-Autumn-Fashion-Solid-Slim-Wedding-Set-Vintage.jpg",
                            InStock = true,
                            LongDescription = "2020 Business Blazer Vest Pants Suit Sets Men Autumn Fashion Solid Slim Wedding Set Vintage Classic Blazers Male",
                            Name = "Business Blazer",
                            Notes = "It is a fine item to have!",
                            Price = 28.99m,
                            ShortDescription = "2020 Business Blazer Vest Pants"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/HTB1QJaIXyrxK1RkHFCcq6AQCVXae/Brand-Clothing-Men-Blazer-Fashion-Cotton-Suit-Blazer-Slim-Fit-Masculine-Blazer-Casual-Solid-Colr-Male.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/HTB1QJaIXyrxK1RkHFCcq6AQCVXae/Brand-Clothing-Men-Blazer-Fashion-Cotton-Suit-Blazer-Slim-Fit-Masculine-Blazer-Casual-Solid-Colr-Male.jpg",
                            InStock = true,
                            LongDescription = "Brand Clothing Men Blazer Fashion Cotton Suit Blazer Slim Fit Masculine Blazer Casual Solid Color Male Suits Jacket",
                            Name = "Branded Blazer",
                            Notes = "It is a fine item to have!",
                            Price = 28.99m,
                            ShortDescription = "Brand Clothing Men Blazer Fashion"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/Had53cc1a13614e03bfdbd7b227b6ac8fP/New-Burgundy-Men-s-Suit-2-Pieces-Double-breasted-Notch-Lapel-Flat-Casual-Tuxedos-For-Wedding.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/Had53cc1a13614e03bfdbd7b227b6ac8fP/New-Burgundy-Men-s-Suit-2-Pieces-Double-breasted-Notch-Lapel-Flat-Casual-Tuxedos-For-Wedding.jpg",
                            InStock = true,
                            LongDescription = "New Burgundy Men Suit 2 Pieces Double-breasted Notch Lapel Flat Casual Tuxedos For Wedding(Blazer+Pants)",
                            Name = "Burgundy Suit",
                            Notes = "It is a fine item to have!",
                            Price = 99.99m,
                            ShortDescription = "New Burgundy Men Suit"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/H72de7ea354694613b7e64222eede474bm/Fashion-Autumn-Women-Plaid-Blazers-and-Jackets-Work-Office-Lady-Suit-Slim-Double-Breasted-Business-Female.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/H72de7ea354694613b7e64222eede474bm/Fashion-Autumn-Women-Plaid-Blazers-and-Jackets-Work-Office-Lady-Suit-Slim-Double-Breasted-Business-Female.jpg",
                            InStock = true,
                            LongDescription = "Fashion Autumn Women Plaid Blazers and Jackets Work Office Lady Suit Slim Double Breasted Business Female Blazer Coat Traveler",
                            Name = "Plaid Blazer",
                            Notes = "It is a fine item to have!",
                            Price = 89.99m,
                            ShortDescription = "Business Female Blazer Coat"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/Hfa5b40a7a5364b6e87aa50e066e84e65h/Blazer-Womens-Suit-Jackets-Long-Solid-Coats-Office-Ladies-Turn-Down-Collar-Jackets-Casual-Female-Outerwear.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/Hfa5b40a7a5364b6e87aa50e066e84e65h/Blazer-Womens-Suit-Jackets-Long-Solid-Coats-Office-Ladies-Turn-Down-Collar-Jackets-Casual-Female-Outerwear.jpg",
                            InStock = true,
                            LongDescription = "Blazer Women Suit Jackets Long Solid Coats Office Ladies Turn Down Collar Jackets Casual Female Outerwear Suit Blazer",
                            Name = "Women Suit",
                            Notes = "It is a fine item to have!",
                            Price = 75.99m,
                            ShortDescription = "Blazer Women Suit Jackets Long"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/HTB1Lq8_QOrpK1RjSZFhq6xSdXXan/Women-Floral-Print-Long-Sleeve-Blazer-2019-Spring-Lightweight-Casual-Office-Lapel-Turn-Down-Collar-Slim.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/HTB1Lq8_QOrpK1RjSZFhq6xSdXXan/Women-Floral-Print-Long-Sleeve-Blazer-2019-Spring-Lightweight-Casual-Office-Lapel-Turn-Down-Collar-Slim.jpg",
                            InStock = true,
                            LongDescription = "Women Floral Print Long Sleeve Blazer 2019 Spring Lightweight Casual Office Lapel Turn Down Collar Slim Jacket Outwear",
                            Name = "Floral Blazer",
                            Notes = "It is a fine item to have!",
                            Price = 49.99m,
                            ShortDescription = "Women Floral Print Blazer"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/H6ce15c9de16b4d5f9fdff8ac269bc97fy/Fashion-Autumn-Blazers-Jackets-Women-Long-Suit-Jacket-Black-Long-Sleeve-Slim-Fit-Button-blazers-Jackets.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/H6ce15c9de16b4d5f9fdff8ac269bc97fy/Fashion-Autumn-Blazers-Jackets-Women-Long-Suit-Jacket-Black-Long-Sleeve-Slim-Fit-Button-blazers-Jackets.jpg",
                            InStock = true,
                            LongDescription = "Fashion Autumn Blazers Jackets Women Long Suit Jacket Black Long Sleeve Slim Fit Button blazers Jackets Outerwear",
                            Name = "Autumn Blazers",
                            Notes = "It is a fine item to have!",
                            Price = 45.99m,
                            ShortDescription = "Fashion Autumn Blazers Jackets"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/Hdd06c9d610964fad92e26c15622fde28I/Boys-Wedding-Suits-Kids-Clothes-Toddler-Formal-Kids-Suit-Children-S-Wear-Blouse-Overalls-Tie-3pcs.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/Hdd06c9d610964fad92e26c15622fde28I/Boys-Wedding-Suits-Kids-Clothes-Toddler-Formal-Kids-Suit-Children-S-Wear-Blouse-Overalls-Tie-3pcs.jpg",
                            InStock = true,
                            LongDescription = "Boys Wedding Suits Kids Clothes Toddler Formal Kids Suit Children Wear Blouse Overalls Tie 3pcs Sets Boys Outfit Baby Clothes",
                            Name = "Wedding Suits",
                            Notes = "It is a fine item to have!",
                            Price = 60.99m,
                            ShortDescription = "Boys Wedding Suits Kids"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/HTB17xFhbBCw3KVjSZFuq6AAOpXab/Kids-Suits-Blazers-2019-Autumn-Baby-Boys-Shirt-Overalls-Coat-Tie-Boys-Suit-for-Wedding-Formal.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/HTB17xFhbBCw3KVjSZFuq6AAOpXab/Kids-Suits-Blazers-2019-Autumn-Baby-Boys-Shirt-Overalls-Coat-Tie-Boys-Suit-for-Wedding-Formal.jpg",
                            InStock = true,
                            LongDescription = "Kids Suits Blazers 2019 Autumn Baby Boys Shirt Overalls Coat Tie Boys Suit for Wedding Formal Party Wear Cotton Children Clothes",
                            Name = "Kids Blazer",
                            Notes = "It is a fine item to have!",
                            Price = 65.99m,
                            ShortDescription = "Kids Suits Blazers 2019"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/HTB1yIZfdBKw3KVjSZFOq6yrDVXam/Suits-for-Baby-Boy-Costume-Cotton-Boys-Suits-Single-Breasted-Kids-Blazers-Boys-Suits-Set-Formal.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/HTB1yIZfdBKw3KVjSZFOq6yrDVXam/Suits-for-Baby-Boy-Costume-Cotton-Boys-Suits-Single-Breasted-Kids-Blazers-Boys-Suits-Set-Formal.jpg",
                            InStock = true,
                            LongDescription = "Suits for Baby Boy Costume Cotton Boys Suits Single Breasted Kids Blazers Boys Suits Set Formal Wedding Wear Children Clothing",
                            Name = "Baby Costume",
                            Notes = "It is a fine item to have!",
                            Price = 65.99m,
                            ShortDescription = "Suits for Baby Boy Costume"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://ae01.alicdn.com/kf/H5c00774f0b1b45d6941e69e6134e45303/Boys-Fashion-Blazer-Suit-Jacket-Flower-Boys-Clothes-Kids-Boys-Piano-Performance-Clothes-Casual-Children-s.jpg_220x220xz.jpg_.webp",
                            ImageUrl = "https://ae01.alicdn.com/kf/H5c00774f0b1b45d6941e69e6134e45303/Boys-Fashion-Blazer-Suit-Jacket-Flower-Boys-Clothes-Kids-Boys-Piano-Performance-Clothes-Casual-Children-s.jpg",
                            InStock = true,
                            LongDescription = "Boys Fashion Blazer Suit Jacket Flower Boys Clothes Kids Boys Piano Performance Clothes Casual Children Suits Gentleman Sets",
                            Name = "Fashion Blazer",
                            Notes = "It is a fine item to have!",
                            Price = 65.99m,
                            ShortDescription = "Boys Fashion Blazer Suit"
                        });
                });

            modelBuilder.Entity("Domain.ShoppingCartItems.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 881, DateTimeKind.Utc).AddTicks(6550));

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 7, 6, 17, 21, 7, 881, DateTimeKind.Utc).AddTicks(7823));

                    b.Property<int>("ShopItemId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShopItemId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Domain.OrderDetails.OrderDetail", b =>
                {
                    b.HasOne("Domain.Orders.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.ShopItems.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Orders.Order", b =>
                {
                    b.HasOne("Domain.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ShopItems.ShopItem", b =>
                {
                    b.HasOne("Domain.Categories.Category", "Category")
                        .WithMany("ShopItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.ShoppingCartItems.ShoppingCartItem", b =>
                {
                    b.HasOne("Domain.ShopItems.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
